/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment1_8puzzle;

import Agents.SearchAgent;
import ProblemFormulation.Problem;
import java.awt.Color;
import static java.awt.Component.TOP_ALIGNMENT;
import java.awt.event.MouseEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;

/**
 *
 * @author Omar
 */
public class UI extends javax.swing.JFrame
{

    /**
     * Creates new form UI
     */
    private static UI ui;
    ArrayList<int[][]> solution;
    static int i = 0;
    int flag = 0;
    Problem p;
    Timer timer = new Timer("Timer");

    public UI() throws InterruptedException
    {
        initComponents();
        this.setLocationRelativeTo(null);
        ui = this;
       
        fadingEffect();
        
      
        buttonSolve.addMouseListener(new java.awt.event.MouseListener() 
        {

            @Override
            public void mouseClicked(MouseEvent e)
            {

              start();

            }

            @Override
            public void mousePressed(MouseEvent e)
            {

            }

            @Override
            public void mouseReleased(MouseEvent e)
            {

            }

            @Override
            public void mouseEntered(MouseEvent e)
            {
            }

            @Override
            public void mouseExited(MouseEvent e)
            {
            }
        });
        
        
          exit.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e)
            {
                try
                {
                    UI.getInstance().dispose();
                    //          throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                } catch (InterruptedException ex)
                {
                   }
            }

            @Override
            public void mousePressed(MouseEvent e)
            {
            }

            @Override
            public void mouseReleased(MouseEvent e)
            {
            }

            @Override
            public void mouseEntered(MouseEvent e)
            {
             }

            @Override
            public void mouseExited(MouseEvent e)
            {
            }
            
        });

    }

    public static UI getInstance() throws InterruptedException
    {
        if (ui != null)
        {

            return ui;
        } else
        {
            return new UI();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        j0 = new javax.swing.JButton();
        j1 = new javax.swing.JButton();
        j2 = new javax.swing.JButton();
        j3 = new javax.swing.JButton();
        j4 = new javax.swing.JButton();
        j5 = new javax.swing.JButton();
        j6 = new javax.swing.JButton();
        j7 = new javax.swing.JButton();
        j8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        status = new javax.swing.JLabel();
        path = new javax.swing.JLabel();
        path1 = new javax.swing.JLabel();
        path2 = new javax.swing.JLabel();
        path5 = new javax.swing.JLabel();
        pathToTheGoal = new javax.swing.JLabel();
        pathCost = new javax.swing.JLabel();
        numberOfExpandedNodes = new javax.swing.JLabel();
        fringeSize = new javax.swing.JLabel();
        maxFringeSize = new javax.swing.JLabel();
        searchDepth = new javax.swing.JLabel();
        maxDepth = new javax.swing.JLabel();
        path6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        solve = new javax.swing.JPanel();
        buttonSolve = new javax.swing.JLabel();
        initialCondition = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        bfs = new javax.swing.JRadioButton();
        dfs = new javax.swing.JRadioButton();
        a = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        a1 = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        browse = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        exit = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("8-Puzzle"); // NOI18N
        setUndecorated(true);
        setOpacity(0.0F);
        setSize(new java.awt.Dimension(601, 429));

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));

        jPanel2.setBackground(new java.awt.Color(255, 255, 238));
        jPanel2.setLayout(new java.awt.GridLayout(3, 3));

        j0.setBackground(new java.awt.Color(244, 251, 231));
        j0.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        j0.setBorder(null);
        j0.setContentAreaFilled(false);
        j0.setOpaque(true);
        jPanel2.add(j0);

        j1.setBackground(new java.awt.Color(244, 251, 231));
        j1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        j1.setForeground(new java.awt.Color(0, 102, 102));
        j1.setText("1");
        j1.setBorder(null);
        j1.setContentAreaFilled(false);
        j1.setOpaque(true);
        j1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                j1ActionPerformed(evt);
            }
        });
        jPanel2.add(j1);

        j2.setBackground(new java.awt.Color(244, 251, 231));
        j2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        j2.setForeground(new java.awt.Color(0, 102, 102));
        j2.setText("2");
        j2.setBorder(null);
        j2.setContentAreaFilled(false);
        j2.setOpaque(true);
        jPanel2.add(j2);

        j3.setBackground(new java.awt.Color(244, 251, 231));
        j3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        j3.setForeground(new java.awt.Color(0, 102, 102));
        j3.setText("3");
        j3.setBorder(null);
        j3.setContentAreaFilled(false);
        j3.setOpaque(true);
        j3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                j3ActionPerformed(evt);
            }
        });
        jPanel2.add(j3);

        j4.setBackground(new java.awt.Color(244, 251, 231));
        j4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        j4.setForeground(new java.awt.Color(0, 102, 102));
        j4.setText("4");
        j4.setBorder(null);
        j4.setContentAreaFilled(false);
        j4.setOpaque(true);
        jPanel2.add(j4);

        j5.setBackground(new java.awt.Color(244, 251, 231));
        j5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        j5.setForeground(new java.awt.Color(0, 102, 102));
        j5.setText("5");
        j5.setBorder(null);
        j5.setContentAreaFilled(false);
        j5.setOpaque(true);
        jPanel2.add(j5);

        j6.setBackground(new java.awt.Color(244, 251, 231));
        j6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        j6.setForeground(new java.awt.Color(0, 102, 102));
        j6.setText("6");
        j6.setBorder(null);
        j6.setContentAreaFilled(false);
        j6.setOpaque(true);
        jPanel2.add(j6);

        j7.setBackground(new java.awt.Color(244, 251, 231));
        j7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        j7.setForeground(new java.awt.Color(0, 102, 102));
        j7.setText("7");
        j7.setBorder(null);
        j7.setContentAreaFilled(false);
        j7.setOpaque(true);
        jPanel2.add(j7);

        j8.setBackground(new java.awt.Color(244, 251, 231));
        j8.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        j8.setForeground(new java.awt.Color(0, 102, 102));
        j8.setText("8");
        j8.setBorder(null);
        j8.setContentAreaFilled(false);
        j8.setOpaque(true);
        jPanel2.add(j8);

        jPanel3.setBackground(new java.awt.Color(239, 248, 231));

        status.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        status.setText(".");

        path.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        path.setText("Path to the Goal:");

        path1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        path1.setText("Path cost:");

        path2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        path2.setText("Number of Nodes Expanded:");

        path5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        path5.setText("search depth:");

        pathToTheGoal.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        pathCost.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        pathCost.setText(" ");

        numberOfExpandedNodes.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        numberOfExpandedNodes.setText(" ");

        fringeSize.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        fringeSize.setText(" ");

        maxFringeSize.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        maxFringeSize.setText(" ");

        searchDepth.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        searchDepth.setText(" ");

        maxDepth.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        maxDepth.setText(" ");

        path6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        path6.setText("Max depth:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Excution Time:");

        time.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        time.setText(" ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(status)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(maxFringeSize, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(path)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pathToTheGoal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(path5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(searchDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(path1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(pathCost, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(path6)
                                        .addGap(18, 18, 18)
                                        .addComponent(maxDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fringeSize, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(path2)
                                .addGap(18, 18, 18)
                                .addComponent(numberOfExpandedNodes, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(0, 556, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(status)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(path)
                    .addComponent(pathToTheGoal, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(fringeSize)
                        .addGap(26, 26, 26)
                        .addComponent(maxFringeSize))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(path1)
                            .addComponent(pathCost))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(path2)
                            .addComponent(numberOfExpandedNodes))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(path5)
                            .addComponent(searchDepth))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(path6)
                            .addComponent(maxDepth))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(time))))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(231, 246, 213));

        solve.setBackground(new java.awt.Color(0, 102, 102));
        solve.setForeground(new java.awt.Color(153, 255, 255));
        solve.setLayout(new java.awt.CardLayout());

        buttonSolve.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        buttonSolve.setForeground(new java.awt.Color(245, 255, 195));
        buttonSolve.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        buttonSolve.setText("Solve");
        buttonSolve.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        solve.add(buttonSolve, "card2");

        initialCondition.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel2.setBackground(new java.awt.Color(0, 102, 102));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Initial State");

        jPanel6.setBackground(new java.awt.Color(240, 235, 208));

        bfs.setBackground(new java.awt.Color(240, 235, 208));
        buttonGroup1.add(bfs);
        bfs.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bfs.setForeground(new java.awt.Color(0, 102, 102));
        bfs.setText("BFS");

        dfs.setBackground(new java.awt.Color(240, 235, 208));
        buttonGroup1.add(dfs);
        dfs.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dfs.setForeground(new java.awt.Color(0, 102, 102));
        dfs.setText("DFS");

        a.setBackground(new java.awt.Color(240, 235, 208));
        buttonGroup1.add(a);
        a.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        a.setForeground(new java.awt.Color(0, 102, 102));
        a.setText("A*");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Select the Searching Algorith");

        a1.setBackground(new java.awt.Color(240, 235, 208));
        buttonGroup1.add(a1);
        a1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        a1.setForeground(new java.awt.Color(0, 102, 102));
        a1.setSelected(true);
        a1.setText("A*-EUC");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bfs)
                .addGap(72, 72, 72)
                .addComponent(dfs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(a)
                .addGap(59, 59, 59)
                .addComponent(a1)
                .addGap(39, 39, 39))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a)
                    .addComponent(dfs)
                    .addComponent(bfs)
                    .addComponent(a1))
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(240, 235, 208));

        jPanel8.setBackground(new java.awt.Color(0, 102, 102));
        jPanel8.setForeground(new java.awt.Color(0, 255, 204));
        jPanel8.setLayout(new java.awt.CardLayout());

        browse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        browse.setForeground(new java.awt.Color(0, 255, 204));
        browse.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        browse.setText("Browse");
        browse.setEnabled(false);
        jPanel8.add(browse, "card2");

        jTextField2.setEnabled(false);

        jRadioButton4.setBackground(new java.awt.Color(240, 235, 208));
        jRadioButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioButton4.setForeground(new java.awt.Color(0, 102, 102));
        jRadioButton4.setText("Take Problem from File");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jRadioButton4)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButton4))
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setText("PLease Enter 8 digts separated by a comma");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addGap(27, 27, 27)
                        .addComponent(initialCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(solve, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(initialCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(solve, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        exit.setBackground(new java.awt.Color(51, 255, 204));
        exit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        exit.setForeground(new java.awt.Color(51, 255, 204));
        exit.setText("X");
        exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel3.setBackground(new java.awt.Color(0, 255, 153));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 255, 204));
        jLabel3.setText("8-Puzzle Slider Solver -AI");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(390, 390, 390)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 353, Short.MAX_VALUE)
                .addComponent(exit)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(7, 7, 7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void j1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_j1ActionPerformed
    {//GEN-HEADEREND:event_j1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j1ActionPerformed

    private void j3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_j3ActionPerformed
    {//GEN-HEADEREND:event_j3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                int[][] initialCondition =
                {
                    {
                        6, 1, 8
                    },
                    {
                        4, 0, 2
                    },
                    {
                        7, 3, 5
                    }
                };

                //   System.out.println(solution.get(0));
                UI ui;
                try
                {
                    ui = UI.getInstance();
                    ui.setVisible(true);
                } catch (InterruptedException ex)
                {
                    Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });

    }

    //To update the Board with a new state from the Solution list.
    public void setState(int[][] state)
    {

        if (state[0][0] == 0)
        {
            j0.setText("");
        } else
        {
            j0.setText(String.valueOf(state[0][0]));
        }

        if (state[0][1] == 0)
        {
            j1.setText("");
        } else
        {
            j1.setText(String.valueOf(state[0][1]));
        }

        if (state[0][2] == 0)
        {
            j2.setText("");
        } else
        {
            j2.setText(String.valueOf(state[0][2]));
        }

        if (state[1][0] == 0)
        {
            j3.setText("");
        } else
        {
            j3.setText(String.valueOf(state[1][0]));
        }

        if (state[1][1] == 0)
        {
            j4.setText("");
        } else
        {
            j4.setText(String.valueOf(state[1][1]));
        }

        if (state[1][2] == 0)
        {
            j5.setText("");
        } else
        {
            j5.setText(String.valueOf(state[1][2]));
        }

        if (state[2][0] == 0)
        {
            j6.setText("");
        } else
        {
            j6.setText(String.valueOf(state[2][0]));
        }

        if (state[2][1] == 0)
        {
            j7.setText("");
        } else
        {
            j7.setText(String.valueOf(state[2][1]));
        }

        if (state[2][2] == 0)
        {
            j8.setText("");
        } else
        {
            j8.setText(String.valueOf(state[2][2]));
        }

        this.revalidate();
    }

    //For the cool fadding intrance effect
    private void fadingEffect() throws InterruptedException
    {
        Timer timer = new Timer("Timer");

        TimerTask task = new TimerTask()
        {
            public void run()
            {
                if (ui.getOpacity() < 0.99)
                {
                    ui.setOpacity((float) (ui.getOpacity() + 0.01));
                } else
                {
                    timer.cancel();
                }

            }
        };

        long delay = 0;
        long period = 5;
        timer.scheduleAtFixedRate(task, delay, period);

    }

//Function to get the initial condition
    public int[][] getinitialCondition()
    {
        String[] initialcondition = initialCondition.getText().split(",");
        int[][] initial =
        {
            {
                0, 0, 0
            },
            {
                0, 0, 0
            },
            {
                0, 0, 0
            }
        };
        int i = 0, j = 0, k = 0;
        while (k < 9)
        {
            initial[i][j] = Integer.valueOf(initialcondition[k]);
            k++;
            if (j == 2)
            {
                i++;
                j = 0;
            } else
            {
                j++;
            }

        }
        return initial;
    }
    
    
    private void start()
    {
          if (flag == 1)
                {

                    timer.cancel();
                    buttonSolve.setText("Solve");

                    flag = 0;
                } else
                {
                    flag = 1;
                    buttonSolve.setText("New Problem");
                    int[][] initialCondition = getinitialCondition();
                   
                    p = new Problem(initialCondition);
                    SearchAgent searchAgent = new SearchAgent();
                    try
                    {
                        status.setText("Solving...");
                        long startTime = System.currentTimeMillis();
                        if(bfs.isSelected())
                        solution = searchAgent.BFS(p);
                        else if(dfs.isSelected())
                            solution = searchAgent.DFS(p);
                        else if(a.isSelected())
                            solution = searchAgent.A_Manhattan(p);
                        else if(a1.isSelected())
                            solution = searchAgent.A_EuclideanPriorityQueue(p);
                         status.setText("Solved...");
                    long endTime = System.currentTimeMillis();
                    long duration = endTime-startTime;
                    time.setText(String.valueOf(duration)+ " ms");
                    writeToFile();
                            
                    } catch (InterruptedException ex)
                    {
                        Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex)
                    {
                        Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    i = solution.size()-1;
                    timer = new Timer("Timer");
                    long delay = 10;
                    long period = 1000;
                    TimerTask task = new TimerTask()
                    {
                        public void run()
                        {
                            setState(solution.get(i));
                            i--;
                            if (i < 0)
                            {
                                i = solution.size() - 1;
                                timer.cancel();
                            }

                        }
                    };
                    timer.scheduleAtFixedRate(task, delay, period);

                }
                            
    }
    
    
    public void writeToFile() throws FileNotFoundException, IOException
    {
        File file = new File("outPut.txt");
        FileOutputStream fow= new FileOutputStream(file);
        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(fow));
        
        writer.write("Path: "+path.getText());
        writer.newLine();
        writer.write("PathCost: "+pathCost.getText());
        writer.newLine();
        writer.write("Number of ExpandedNodes: "+numberOfExpandedNodes.getText() );
        writer.write("Search Depth: "+ searchDepth.getText());
        
        writer.close();
                
       // StreamWriter writer = 
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton a;
    private javax.swing.JRadioButton a1;
    private javax.swing.JRadioButton bfs;
    private javax.swing.JLabel browse;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel buttonSolve;
    private javax.swing.JRadioButton dfs;
    private javax.swing.JLabel exit;
    public javax.swing.JLabel fringeSize;
    private javax.swing.JTextField initialCondition;
    public javax.swing.JButton j0;
    public javax.swing.JButton j1;
    public javax.swing.JButton j2;
    public javax.swing.JButton j3;
    public javax.swing.JButton j4;
    public javax.swing.JButton j5;
    public javax.swing.JButton j6;
    public javax.swing.JButton j7;
    public javax.swing.JButton j8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JTextField jTextField2;
    public javax.swing.JLabel maxDepth;
    public javax.swing.JLabel maxFringeSize;
    public javax.swing.JLabel numberOfExpandedNodes;
    public javax.swing.JLabel path;
    public javax.swing.JLabel path1;
    public javax.swing.JLabel path2;
    public javax.swing.JLabel path5;
    public javax.swing.JLabel path6;
    public javax.swing.JLabel pathCost;
    public javax.swing.JLabel pathToTheGoal;
    public javax.swing.JLabel searchDepth;
    private javax.swing.JPanel solve;
    public javax.swing.JLabel status;
    private javax.swing.JLabel time;
    // End of variables declaration//GEN-END:variables
}
